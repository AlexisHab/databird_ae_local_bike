version: 2

models:

  - name: stg_sales__customers
    description: This model contains the list of customers
    columns:
      - name: customer_id
        description: "Primary key, unique identifier for each customer."
        data_tests:
            - unique
            - not_null

  - name: stg_sales__stores
    description: This model contains the list of stores
    columns:
      - name: store_id
        description: "Primary key, unique identifier for each store."
        data_tests:
            - unique
            - not_null
      

  - name: stg_sales__staffs
    description: This model contains the list of staff members
    columns:
      - name: staff_id
        description: "Primary key, unique identifier for each store."
        data_tests:
            - unique
            - not_null
      - name: store_id
        description: "Foreign Key, related to the list of stores"
        data_tests:
          - relationships:
              name: "relationship__stg_staffs__store_id__exists__in__stg_store"
              arguments:
                to: ref('stg_stores')
                field: store_id
      - name: manager_id
        description: "List the ID of the manager, relative to staff_id."
        data_tests:
          - relationships:
              name: "relationship__stg_staffs__manager_id__exists__in__staff_id__stg_staffs"
              arguments:
                to: ref('stg_staffs')
                field: staff_id

  - name: stg_sales__orders
    description: This model contains the list of orders
    columns:
      - name: order_id
        description: "Primary key, unique identifier for each order."
        data_tests:
          - unique
          - not_null
      - name: store_id
        description: "Foreign Key, related to the list of stores"
        data_tests:
          - relationships:
              name: "relationship__stg_orders__store_id__exists__in__stg_stores"
              arguments:
                  to: ref('stg_stores')
                  field: store_id
      - name: staff_id
        description: "Foreign Key, related to the list of staffs"
        data_tests:
          - relationships:
              name: "relationship__stg_orders__staff_id__exists__in__stg_staffs"
              arguments:
                  to: ref('stg_staffs')
                  field: staff_id
      - name: customer_id
        description: "Foreign Key, related to the list of customers"
        data_tests:
          - relationships:
              name: "relationship__stg_orders__customer_id__exists__in__stg_customers"
              arguments:
                  to: ref('stg_customers')
                  field: customer_id
      - name: order_date
        description: "Date when the order was placed"
        tests:
          - not_null
      
      - name: shipped_date
        description: "Date when the order was shipped (null if not yet shipped)"
        tests:
          - dbt_utils.expression_is_true:
              expression: ">= order_date"
              config:
                where: "shipped_date is not null"


  - name: stg_sales__order_items
    description: This model contains the list of items in an order
    columns:
      - name: order_item_id
        description: "Primary key, unique identifier for each order item."
        data_tests:
          - unique
          - not_null
      - name: order_id
        description: "Foreign Key, related to the list of order"
        data_tests:
          - relationships:
              name: "relationship__stg_order_items__order_id__exists__in__stg_orders"
              arguments:
                  to: ref('stg_orders')
                  field: order_id
      - name: product_id
        description: "Foreign Key, related to the list of products"
        data_tests:
          - relationships:
              name: "relationship__stg_order_items__product_id__exists__in__stg_products"
              arguments:
                  to: ref('stg_products')
                  field: product_id
      - name: quantity
        data_tests:
          - not_null
          - dbt_utils.expression_is_true:
              arguments:
                expression: " > 0"

      - name: list_price
        data_tests:
          - not_null 
          - dbt_utils.expression_is_true:
              arguments:
                expression: " >= 0"

